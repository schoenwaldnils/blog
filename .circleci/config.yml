# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

general:
  branches:
    only:
     - master # list of branches to build
     - /feature/.*/ # or regexes

machine:
  services:
    - docker

references:
  defaults: &defaults
    working_directory: ~/repo
    docker:
      - image: schoenwaldnils/circleci-node:10.9.0-rsync
        environment:
          DOMAIN_NAME: schoenwald.media

  default_steps: &default_steps
    attach_workspace:
      at: ~/repo

  default_steps_pr: &default_steps_pr
    run:
      name: Avoid hosts unknown for hosteurope
      command: mkdir ~/.ssh/ && echo -e "Host 5.35.245.22\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

  default_steps_pr_deploy: &default_steps_pr_deploy
    run:
      name: Deploy to Server
      command: |
        mv out $FOLDER
        rsync -avr --delete --exclude='static/scripts/analytics.js' ./master schoenwald@5.35.245.22:www/schoenwald/$CIRCLE_PROJECT_REPONAME


jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - -v2.0.2-dependencies-{{ checksum "package.json" }}-{{ .Environment.CIRCLE_SHA1 }}
            # fallback to using the latest cache if no exact match is found
            - -v2.0.2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - -v2.0.2-dependencies-

      - run: npm install --no-package-lock

      - save_cache:
          key: -v2.0.2-dependencies-{{ checksum "package.json" }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ./node_modules

      - persist_to_workspace:
          root: ~/repo
          paths: .

  test-css:
    <<: *defaults
    steps:
      - *default_steps
      - run:
          name: Lint CSS
          command: npm run lint:css

  test-js:
    <<: *defaults
    steps:
      - *default_steps
      - run:
          name: Lint JS
          command: npm run lint:js

  build:
    <<: *defaults
    steps:
      - *default_steps
      - run:
          name: Export static files
          command: |
            set -x
            npm run export-ci
      - run:
          name: Minify html
          command: |
            npm run minify-html
      - persist_to_workspace:
          root: ~/repo
          paths:
            - out

  test-html:
    <<: *defaults
    steps:
      - *default_steps
      - run:
          name: Lint HTML
          command: npm run lint:html

  deploy-production:
    <<: *defaults
    environment:
      FOLDER: production
    steps:
      - *default_steps
      - *default_steps_pr
      - *default_steps_pr_deploy

  deploy-master:
    <<: *defaults
    environment:
      FOLDER: master
    steps:
      - *default_steps
      - *default_steps_pr
      - *default_steps_pr_deploy

  deploy-pr-to-aws:
    docker:
      - image: circleci/python:2.7-jessie
    working_directory: ~/repo
    steps:
      - *default_steps
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Deploy to S3
          command: |
            export BRANCH_NAME=$( echo $CIRCLE_BRANCH | tr -d @ | tr . - | tr / - | tr _ -)
            mv out $BRANCH_NAME
            aws s3 sync $BRANCH_NAME s3://schoenwald/$CIRCLE_PROJECT_REPONAME/$BRANCH_NAME --delete


workflows:
  version: 2
  CircleCI:
    jobs:
      - checkout:
          filters:
            tags:
              only: /.*/
      - test-css:
          requires:
            - checkout
          filters:
            tags:
              only: /.*/
      - test-js:
          requires:
            - checkout
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - test-css
            - test-js
          filters:
            tags:
              only: /.*/
      - test-html:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - deploy-master:
          requires:
            - test-html
          filters:
            branches:
              only: master
      - deploy-production:
          requires:
            - test-html
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy-pr-to-aws:
          requires:
            - test-html
          filters:
            branches:
              only: /.+\/.+/
