# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

general:
  branches:
    only:
     - master # list of branches to build
     - /feature/.*/ # or regexes

machine:
  services:
    - docker

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8.9.1


jobs:
  echo:
    <<: *defaults
    steps:
      - run:
          name: Echo
          command: |
            echo $CIRCLE_BRANCH

  checkout:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/repo
          paths: .

  test-css:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Lint CSS
          command: npm run stylelint

  test-js:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Lint JS
          command: npm run eslint

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Export static files
          command: |
            set -x
            npm run export

      - run:
          name: Minify html
          command: |
            npm run minify-html

      - persist_to_workspace:
          root: ~/repo
          paths:
            - out

  test-html:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Lint HTML
          command: npm run htmlhint

  deploy-production:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Avoid hosts unknown for hosteurope
          command: mkdir ~/.ssh/ && echo -e "Host 5.35.245.22\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Install rsync
          command: sudo apt install rsync
      - run:
          name: Deploy to Server
          command: |
            mv out production
            rsync -avr --delete --exclude='static/scripts/analytics.js' ./production schoenwald@5.35.245.22:www/schoenwald

  deploy-test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Avoid hosts unknown for hosteurope
          command: mkdir ~/.ssh/ && echo -e "Host 5.35.245.22\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Install rsync
          command: sudo apt install rsync
      - run:
          name: Deploy to Server
          command: |
            mv out test
            rsync -avr --delete --exclude='static/scripts/analytics.js' ./test schoenwald@5.35.245.22:www/schoenwald

  deploy-pr:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Avoid hosts unknown for hosteurope
          command: mkdir ~/.ssh/ && echo -e "Host 5.35.245.22\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Install rsync
          command: sudo apt install rsync
      - run:
          name: Deploy to Server
          command: |
            mv out $CIRCLE_BRANCH
            rsync -avr --delete --exclude='static/scripts/analytics.js' ./$CIRCLE_BRANCH schoenwald@5.35.245.22:www/schoenwald/feature


workflows:
  version: 2
  echo:
    jobs:
      - echo:
          filters:
            branches:
              only: /feature\/.*/

  build-deploy:
    jobs:
      - checkout:
          filters:
            tags:
              only: /.*/
      - test-css:
          requires:
            - checkout
          filters:
            tags:
              only: /.*/
      - test-js:
          requires:
            - checkout
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - test-css
            - test-js
          filters:
            tags:
              only: /.*/
      - test-html:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - deploy-production:
          requires:
            - test-html
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy-test:
          requires:
            - test-html
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^test.*/
      - deploy-pr:
          requires:
            - test-html
          filters:
            branches:
              only: /feature\/.*/
